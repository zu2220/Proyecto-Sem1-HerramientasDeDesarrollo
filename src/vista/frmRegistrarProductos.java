
package vista;

import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.ProductoReferencia;

import javax.swing.table.TableRowSorter;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.RowFilter;

import controlador.Controlador_ProductoReferencia;
import java.util.Random;
import modelo.ProductoAdquirido;
/**
 *
 * @author oscar
 */
public class frmRegistrarProductos extends javax.swing.JFrame {

    private TableRowSorter trsfiltro;
    String filtro;
    
    private DefaultTableModel dtmProducto, dtmDatosCli, dtmBusqueda;
    private Object[] arrayDatosProducto = new Object[5];
    private Object[] arrayDatosCli = new Object[3];
    private Object[] arrayDatosProRef = new Object[3];
    
    private String codCompra = "";
    
    public frmRegistrarProductos() {
        initComponents();
        dtmProducto = (DefaultTableModel)tablaProductos.getModel();
        dtmDatosCli = (DefaultTableModel)tablaDatosCliente.getModel();
        dtmBusqueda = (DefaultTableModel)tablaBuscar.getModel();
        llenarTablaBuscar();
        GenerarCodCompra();
        txtMontoTotal.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtProducto = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        txtUnidadesProducto = new javax.swing.JTextField();
        btnRegistrarDatosCliente = new javax.swing.JButton();
        txtPrecioUnitario = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDatosCliente = new javax.swing.JTable();
        btnGenerarBoleta = new javax.swing.JButton();
        btnNuevaBoleta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaBuscar = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtMontoTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCodProducto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador de boletas electrónicas");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 380, 30));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Cantidad", "Precio unitario", "Precio total"
            }
        ));
        jScrollPane1.setViewportView(tablaProductos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 470, 90));
        jPanel1.add(txtUnidadesProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 70, -1));

        btnRegistrarDatosCliente.setText("Registrar datos del cliente");
        btnRegistrarDatosCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarDatosClienteActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarDatosCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, -1, -1));
        jPanel1.add(txtPrecioUnitario, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 90, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, -1, 20));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Registro de Productos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Registro de datos del cliente");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, -1, -1));
        jPanel1.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 270, -1));
        jPanel1.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 270, 30));
        jPanel1.add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 270, -1));

        tablaDatosCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Apellidos", "DNI"
            }
        ));
        jScrollPane2.setViewportView(tablaDatosCliente);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 360, 90));

        btnGenerarBoleta.setText("Generar boleta");
        btnGenerarBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarBoletaActionPerformed(evt);
            }
        });
        jPanel1.add(btnGenerarBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, 150, 20));

        btnNuevaBoleta.setText("Nueva boleta");
        btnNuevaBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaBoletaActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevaBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, 150, -1));

        jLabel3.setText("Nombre del producto");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel4.setText("Unidades");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jLabel5.setText("Precio unitario");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        jLabel6.setText("Nombres");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        jLabel7.setText("Apellidos");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, -1, -1));

        jLabel8.setText("DNI");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        tablaBuscar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Precio Unitario"
            }
        ));
        tablaBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBuscarMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaBuscar);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 300, 130));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });
        jPanel1.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 200, -1));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, -1, -1));

        jLabel9.setText("Búsqueda del producto");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, -1, -1));

        jLabel10.setText("Monto Total :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));
        jPanel1.add(txtMontoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 80, 30));

        jLabel11.setText("Cód. Producto");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel1.add(txtCodProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 120, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        //verificamos que se hayan llenado todos los campos
        if(txtProducto.getText().isEmpty() || txtUnidadesProducto.getText().isEmpty() || txtPrecioUnitario.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Debe llenar todos los campos", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{
            //verificamos que solo se hayan ingresado números en los campos de cantidad y precio 
            if(contieneLetras(txtPrecioUnitario.getText()) || contieneLetras(txtUnidadesProducto.getText()))
                JOptionPane.showMessageDialog(this, "Los campos de unidades y precio unitario solo deben tener números", "Aviso", JOptionPane.WARNING_MESSAGE);
            else{
                String nombreP = txtProducto.getText();
                double precioU = Double.parseDouble(txtPrecioUnitario.getText());
                double cantidad = Integer.parseInt(txtUnidadesProducto.getText());

                //verificamos que tanto las unidades del producto(cantidad) como el precio unitario sean núm positivos
                if(cantidad <= 0 || precioU <= 0){
                    JOptionPane.showMessageDialog(this,"Solo números enteros");
                }else{
                    String codProducto = txtCodProducto.getText();
                    ProductoAdquirido nuevoP = new ProductoAdquirido(codCompra,codProducto,cantidad);

                    arrayDatosProducto[0]=nuevoP.getCodigoProducto();
                    arrayDatosProducto[1]=nombreP;
                    arrayDatosProducto[2]=nuevoP.getCantidad();
                    arrayDatosProducto[3]=precioU;
                    arrayDatosProducto[4]=precioU*nuevoP.getCantidad();
                    dtmProducto.addRow(arrayDatosProducto);

                    //limpiamos los campos
                    txtProducto.setText("");
                    txtUnidadesProducto.setText("");
                    txtPrecioUnitario.setText("");
                    txtCodProducto.setText("");
                }
            }
        
        }
        calcularMontoTotal();    
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnRegistrarDatosClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarDatosClienteActionPerformed
        // TODO add your handling code here:
        //verificar si es que ya existe un cliente registrado.
        String[] opciones = {"SÍ","NO"};
        int answer = 0;
        if(tablaDatosCliente.getRowCount()==1){
            answer = JOptionPane.showOptionDialog(this, "¿Desea editar los datos del cliente registrado?", "Aviso", WIDTH, HEIGHT, null, opciones, EXIT_ON_CLOSE);
            if(answer==0){
                dtmDatosCli.setRowCount(0);
                RegistrarDatosCli();
            }
        }
        else{
            RegistrarDatosCli();
        }
        
    }//GEN-LAST:event_btnRegistrarDatosClienteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int indiceX = tablaProductos.getSelectedRow();
        if(indiceX!=-1){
            dtmProducto.removeRow(indiceX);
        }else{
            JOptionPane.showMessageDialog(null,"Por favor, seleccionar el producto a eliminar");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGenerarBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarBoletaActionPerformed
        // TODO add your handling code here:
        Document documento = new Document(PageSize.A7, 10, 10, 10, 10);;
        try{
            String fechaHora = new SimpleDateFormat("dd-MM-yyyy_HH-mm-ss").format(new Date());
            String rutaDescargas = System.getProperty("user.home") + "\\Downloads\\Boleta_"+fechaHora+".pdf";
            PdfWriter.getInstance(documento, new FileOutputStream(rutaDescargas));
            documento.open();
            
            Font fuentePequena = new Font(Font.FontFamily.HELVETICA, 8, Font.NORMAL);
            
            documento.add(new Paragraph("Boleta de Venta Electrónica",fuentePequena));
            documento.add(new Paragraph("Fecha y hora: "+ new SimpleDateFormat("dd-MM-yyyy_HH-mm-ss").format(new Date()),fuentePequena));
            documento.add(new Paragraph("Datos del cliente:",fuentePequena));
            documento.add(new Paragraph("Nombres y apellidos: "+tablaDatosCliente.getValueAt(0, 0)+" "+tablaDatosCliente.getValueAt(0, 1),fuentePequena));
            documento.add(new Paragraph("Doc. de identidad: "+tablaDatosCliente.getValueAt(0, 2),fuentePequena));
            documento.add(new Paragraph("\n",fuentePequena));
            
            PdfPTable tablaPDF = new PdfPTable(4);
            tablaPDF.addCell(new Phrase("Producto",fuentePequena));
            tablaPDF.addCell(new Phrase("Cantidad",fuentePequena));
            tablaPDF.addCell(new Phrase("Precio Unitario",fuentePequena));
            tablaPDF.addCell(new Phrase("Subtotal",fuentePequena));
            
            double total = 0;
            for(int i = 0; i < tablaProductos.getRowCount(); i++){
                for(int j = 0; j < 4; j++){
                    tablaPDF.addCell(new Phrase(tablaProductos.getValueAt(i, j).toString(),fuentePequena));
                    if(j==3)
                        total+= Double.parseDouble(tablaProductos.getValueAt(i, j).toString());
                }
            }
            
            documento.add(tablaPDF);
            documento.add(new Paragraph("\nTotal: S/ "+total,fuentePequena));
            
            documento.close();
            JOptionPane.showMessageDialog(this, "Boleta electrónica generada con éxito");
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "No se pudo generar la boleta electrónica");
        }
    }//GEN-LAST:event_btnGenerarBoletaActionPerformed

    private void btnNuevaBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaBoletaActionPerformed
        // TODO add your handling code here:
        dtmProducto.setRowCount(0);
        dtmDatosCli.setRowCount(0);
        codCompra = GenerarCodCompra();
        
    }//GEN-LAST:event_btnNuevaBoletaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = txtBuscar.getText();
                repaint();
                filtro();
            }
        });
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        // TODO add your handling code here:
        trsfiltro = new TableRowSorter(tablaBuscar.getModel());
        tablaBuscar.setRowSorter(trsfiltro);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void tablaBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBuscarMouseClicked
        // TODO add your handling code here:
        int X = tablaBuscar.getSelectedRow();
        String nombreP = dtmBusqueda.getValueAt(X, 1).toString();
        String codigoP = dtmBusqueda.getValueAt(X, 0).toString();
        String precioUP = dtmBusqueda.getValueAt(X, 2).toString();
        
        txtProducto.setText(nombreP);
        txtCodProducto.setText(codigoP);
        txtPrecioUnitario.setText(precioUP);
        
    }//GEN-LAST:event_tablaBuscarMouseClicked

    public void filtro(){
        filtro = txtBuscar.getText();
        trsfiltro.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 0));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRegistrarProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGenerarBoleta;
    private javax.swing.JButton btnNuevaBoleta;
    private javax.swing.JButton btnRegistrarDatosCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaBuscar;
    private javax.swing.JTable tablaDatosCliente;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodProducto;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtMontoTotal;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPrecioUnitario;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtUnidadesProducto;
    // End of variables declaration//GEN-END:variables

    private boolean dniValido(String dni) {
        //validar que no contenga letras
        boolean flag1 = contieneLetras(dni);
        
        //validar que el campo contenga 8 digitos
        boolean flag2 = ochoDigitos(dni);
        
        if(flag1==true || flag2==false)
            return false;
        else
            return true;

    }

    private boolean contieneLetras(String dni) {
        char[] dniChar = dni.toCharArray();
        for(char aux:dniChar ){
            if(aux=='0'||aux=='1'||aux=='2'||aux=='3'||aux=='4'||aux=='5'||aux=='6'||aux=='7'||aux=='8'||aux=='9'){
                return false;
            }
        }
        return true;
    }

    private boolean ochoDigitos(String dni) {
        int size = dni.length();
        
        if(size!=8)
            return false;
        else
            return true;
    }

    private void RegistrarDatosCli() {
        String nombres = txtNombres.getText();
        String apellidos = txtApellidos.getText();
        String dni = txtDNI.getText();

        boolean flag = dniValido(dni);

        if(!flag)
            JOptionPane.showMessageDialog(this, "Ingresar solo números. El DNI debe tener 8 digitos", "Error", JOptionPane.WARNING_MESSAGE);
        else{
            Cliente cliente = new Cliente(nombres,apellidos,dni);

            arrayDatosCli[0]=cliente.getNombre();
            arrayDatosCli[1]=cliente.getApellido();
            arrayDatosCli[2]=cliente.getDni();

            dtmDatosCli.addRow(arrayDatosCli);

            //limpiamos los campos
            txtNombres.setText("");
            txtApellidos.setText("");
            txtDNI.setText("");
        }
    }

    private void llenarTablaBuscar() {
        Controlador_ProductoReferencia controlador = new Controlador_ProductoReferencia();
        ArrayList<ProductoReferencia> productos = controlador.getProductos();
        for(ProductoReferencia aux:productos){
            arrayDatosProRef[0] = aux.getCodigo();
            arrayDatosProRef[1] = aux.getNombre();
            arrayDatosProRef[2] = aux.getPrecio();
            dtmBusqueda.addRow(arrayDatosProRef);
        }
    }

    private String GenerarCodCompra() {
        int num =  0;
        Random r = new Random();
        num = r.nextInt(100, 100000);
        return String.valueOf(num);
    }

    private void calcularMontoTotal() {
        double mTotal = 0;
        for(int i = 0; i<dtmProducto.getRowCount(); i++){
            mTotal += Double.parseDouble(dtmProducto.getValueAt(i, 4).toString());
        }
        txtMontoTotal.setText(String.valueOf(mTotal));
    }
}
